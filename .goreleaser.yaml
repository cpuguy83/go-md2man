---
# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    - git submodule update --remote  --init
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - env: [CGO_ENABLED=0]
    goos:
      - linux
      - darwin
      - freebsd
      - netbsd
    goarch:
      - amd64
      - arm64

    main: md2man.go
    id: md2man
    binary: md2man


archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

nfpms:
  - file_name_template: "{{ .ConventionalFileName }}"
    id: packages
    homepage: https://github.com/cpuguy83/go-md2man
    description: |-
      Markdown to ROFF converter
      A CLI utility which, as the name implies, generates man pages
      from Markdown.
    maintainer: go-md2man
    license: MIT
    vendor: go-md2man
    bindir: /usr/bin
    section: utils
    contents:
      - src: ./LICENSE.md
        dst: /usr/share/doc/{{ .PackageName }}/copyright
        expand: true
        file_info:
          mode: 0644
      - src: ./README.md
        dst: /usr/share/doc/{{ .PackageName }}/
        expand: true
        file_info:
          mode: 0644
    formats:
      - deb
      - rpm
      - archlinux
# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
